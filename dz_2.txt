JSON
 4. Создать внешний репозиторий c названием JSON - new
 5. Клонировать репозиторий JSON на локальный компьютер - git clone ссылка
 6. Внутри локального JSON создать файл “new.json” -touch new.json
 7. Добавить файл под гит - git add .
 8. Закоммитить файл - git commit -m "переношу файл JSON"
 9. Отправить файл на внешний GitHub репозиторий - git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON - vim new.json
{ 
	"Surnme" : "Gusmanova",
	"Name" : "Dasha",
	"Middle name: "Yuryevna",
	"Age" : 25,
	"Animals" : 1,
	"Salaty" ; 100000

}
:wq

 11. Отправить изменения на внешний репозиторий git commit -am "информация о себе"
 12. Создать файл preferences.json - touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON - vim preferences.json
{
	"Любимый фильм" : "Живая сталь",
	"Любимый сериал" : "Бумажный дом",
	"Любимая еда" : "Картошка фри",
	"Любимое время года" : "Лето",
	"Страна, которую хочу посетить" : "Испания"

}

:wq
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON -  touch sklls.json
vim sklls.json

 15. Отправить сразу 2 файла на внешний репозиторий - 
git add .
git commit -m "отправить два файла"
git push
 16. На веб интерфейсе создать файл bug_report.json - добавить файл 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе - Commit changes
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
{
  "title" : "название",
  "severity" : "критичность",
  "priority" : "приоритет",
  "component" : "компонент",
  
}
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе - Commit changes
 20. Синхронизировать внешний и локальный репозиторий JSON
git fetch (проверить изменения )
git pull


XML
 21. Создать внешний репозиторий c названием XML.
 22. Клонировать репозиторий XML на локальный компьютер
 git clone https://github.com/DashaGusmanova/XML.git

 23. Внутри локального XML создать файл “new.xml”
cd xml
touch new.xml

 24. Добавить файл под гит - git add .
 25. Закоммитить файл - git commit -m "создать файл"
 26. Отправить файл на внешний GitHub репозиторий - git push 
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML
vim new.xml
<xnl>
<Sutname>Gusmanova</Surname>
<Name>Dasha</Name>
<Middle name>Yuryevna</Middle nme>
<Age>25</Age>
<Animals>1</Animals>
<Salaty>100000</Salaty>

:wq

 28. Отправить изменения на внешний репозиторий
git add .
git commit -m "информация о себе"
git push

 29. Создать файл preferences.xml -touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
vim preferences.xml

<xml>
<Любимый фильм>Живая сталь</Любимый фильм>
<Любимый сериал>Бумажный дом</Любимый сериал>
<Любимая еда>Картошка фри</Любимая еда>
<Любимое время года>Лето</Любимое время года>
<Страна, которую хочу посетить>Испания</Страна, которую хочу посетить>

:wq
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML -
touch skll.xml
vim skll.xml
 32. Сделать коммит в одну строку 
git status
git commit -am "создание двух файлов и добавление информации"
 33. Отправить сразу 2 файла на внешний репозиторий - git push
 34. На веб интерфейсе создать файл bug_report.xml.
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 <title>название</title>
 <severity>критичность</severity>
  <priority>приоритет</priority>
  <component>компонент</component>

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 38. Синхронизировать внешний и локальный репозиторий XML
git fetch (проверить изменения )
git pull